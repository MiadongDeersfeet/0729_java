package com.kh.chap04.controller;


// 클래스 변수(static)와 상수 필드에 대해서!
public class StaticController {
	
	// 필드부
	// [ 표현법 ]
	// 접근제한자 예약어(생략가능) 자료형 식별자;

	public static String str = "static field";   //      static 특징 => str 이 살짝 누웠네?
    // String str2;
				  
    // 생성 시점 : 프로그램 실행과 동시에 메모리의 static 영역에 할당
	// 소멸 시점 : 프로그램 종료!
	// 객체를 생성하지 않고 static 영역에 할당을 해버립니다!!!!!!         이것들 우리 변수 이야기하고 있는 거예요. 근데 굳이굳이 구분을 한단 말이에요. 그럼 왜 구분하고 어떻게 구분하는가가 중요한 건데
	// 스태틱은 프로그램 종료까지														//  변수를 어떻게 선언하고 사용하느냐에 따라서 이 변수를 사용할 수 있는 범위가 달라요.
	// 필드는 객체 생성과 동시에 소멸까지
	// 그냥 변수는 스코프 안에서 선언되면 스코프 끝날 때까지
	// 어떻게 구분을 하면 되냐? 무슨 기준이냐?    => 어떤 메모리 영역에 올라가는가임
	// 필드는 힙에, 변수는 스택, 스태틱필드는 스태틱에 올라가고.
	
	// static == "공유"의 개념이 강함     여기저기서 다 쓸 목적으로 붙이는 것이니 일반적으로 접근제한자를 프라빗을 쓰지 않음. 퍼블릭 씀
	// 프로그램 실행과 동시에 올려놓고 거기서 값을 공유해서 사용할 목적
	
	/*
	 * 상수 필드
	 * 
	 * [ 표현법 ]
	 * public static final 자료형 상수필드식별자 = 값;
	 * => 예약어 순서는 상관없음 public final static 으로 작성해도 돌아감
	 * => 한 번 지정한 값을 고정해서 쓰겠다. 무조건 초기화를 해야함!!!
	 * 
	 * static : 공유의 목적
	 * final : 한 번 초기화하고 죽었다 깨나도 안바꾸겠다.
	 * 
	 * 값이 변경되면 큰일나는 고정적인 값들을 메모리(static)영역에 올려놓고 공유해서 쓸 목적
	 * 
	 * 상수 필드 네이밍도 반드시 대문자로 작성해야함!
	 */
	public static final String JAVA_VERSION = "21"; // static 은 기울어지는데 final 은 두꺼워지네. 두꺼워지면 상수 필드인 것이야.
}
